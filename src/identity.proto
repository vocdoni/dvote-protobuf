syntax = "proto3";
package dvote;

import "entity.proto";
import "key.proto";

// Helper to serialize and store a set of entries
message IdentitiesStore {
    repeated Identity identities = 1; 
}

message Identity {
    string name = 1; // alias
    string identityId = 2;

    // Associated keys
    repeated Key keys = 3;

    // Pointer to the place where the Entity metadata can be fetched
    repeated Entity.Reference subscriptions = 4;

    message Claim {
        string index = 1;  // The index on the Merkle Tree
        string proof = 2;  // The Merkle Tree siblings of a ZK proof
        string data = 3;  // The claim itself
        repeated string tags = 4;
    }
    repeated Claim receivedClaims = 5;
    repeated Claim emittedClaims = 6;

    // EXTERNAL FIELDS
    // Allow to use arbitrary key/values so that
    // identities can be organized by custom values.
    map<string, string> meta = 100;
}
