// Type: Protocol layer definitions

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.8
// source: protocol/census.proto

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The models below affect the whole election definition.
type Census struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*Census_Arbo
	//	*Census_Csp
	//	*Census_Erc20
	//	*Census_Erc721
	//	*Census_Erc1155
	//	*Census_Erc777
	//	*Census_ErcMiniMe
	Body isCensus_Body `protobuf_oneof:"body"`
}

func (x *Census) Reset() {
	*x = Census{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Census) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Census) ProtoMessage() {}

func (x *Census) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Census.ProtoReflect.Descriptor instead.
func (*Census) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{0}
}

func (m *Census) GetBody() isCensus_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *Census) GetArbo() *CensusArbo {
	if x, ok := x.GetBody().(*Census_Arbo); ok {
		return x.Arbo
	}
	return nil
}

func (x *Census) GetCsp() *CensusCsp {
	if x, ok := x.GetBody().(*Census_Csp); ok {
		return x.Csp
	}
	return nil
}

func (x *Census) GetErc20() *CensusErc20 {
	if x, ok := x.GetBody().(*Census_Erc20); ok {
		return x.Erc20
	}
	return nil
}

func (x *Census) GetErc721() *CensusErc721 {
	if x, ok := x.GetBody().(*Census_Erc721); ok {
		return x.Erc721
	}
	return nil
}

func (x *Census) GetErc1155() *CensusErc1155 {
	if x, ok := x.GetBody().(*Census_Erc1155); ok {
		return x.Erc1155
	}
	return nil
}

func (x *Census) GetErc777() *CensusErc721 {
	if x, ok := x.GetBody().(*Census_Erc777); ok {
		return x.Erc777
	}
	return nil
}

func (x *Census) GetErcMiniMe() *CensusErcMiniMe {
	if x, ok := x.GetBody().(*Census_ErcMiniMe); ok {
		return x.ErcMiniMe
	}
	return nil
}

type isCensus_Body interface {
	isCensus_Body()
}

type Census_Arbo struct {
	// Always weighted
	Arbo *CensusArbo `protobuf:"bytes,1,opt,name=arbo,proto3,oneof"`
}

type Census_Csp struct {
	Csp *CensusCsp `protobuf:"bytes,2,opt,name=csp,proto3,oneof"`
}

type Census_Erc20 struct {
	Erc20 *CensusErc20 `protobuf:"bytes,11,opt,name=erc20,proto3,oneof"`
}

type Census_Erc721 struct {
	Erc721 *CensusErc721 `protobuf:"bytes,12,opt,name=erc721,proto3,oneof"`
}

type Census_Erc1155 struct {
	Erc1155 *CensusErc1155 `protobuf:"bytes,13,opt,name=erc1155,proto3,oneof"`
}

type Census_Erc777 struct {
	Erc777 *CensusErc721 `protobuf:"bytes,14,opt,name=erc777,proto3,oneof"`
}

type Census_ErcMiniMe struct {
	ErcMiniMe *CensusErcMiniMe `protobuf:"bytes,20,opt,name=ercMiniMe,proto3,oneof"`
}

func (*Census_Arbo) isCensus_Body() {}

func (*Census_Csp) isCensus_Body() {}

func (*Census_Erc20) isCensus_Body() {}

func (*Census_Erc721) isCensus_Body() {}

func (*Census_Erc1155) isCensus_Body() {}

func (*Census_Erc777) isCensus_Body() {}

func (*Census_ErcMiniMe) isCensus_Body() {}

type CensusArbo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CensusRoot []byte `protobuf:"bytes,1,opt,name=censusRoot,proto3" json:"censusRoot,omitempty"`
	CensusUri  string `protobuf:"bytes,2,opt,name=censusUri,proto3" json:"censusUri,omitempty"`
}

func (x *CensusArbo) Reset() {
	*x = CensusArbo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CensusArbo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CensusArbo) ProtoMessage() {}

func (x *CensusArbo) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CensusArbo.ProtoReflect.Descriptor instead.
func (*CensusArbo) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{1}
}

func (x *CensusArbo) GetCensusRoot() []byte {
	if x != nil {
		return x.CensusRoot
	}
	return nil
}

func (x *CensusArbo) GetCensusUri() string {
	if x != nil {
		return x.CensusUri
	}
	return ""
}

type CensusCsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CspUri       string `protobuf:"bytes,1,opt,name=cspUri,proto3" json:"cspUri,omitempty"`
	CspPublicKey []byte `protobuf:"bytes,2,opt,name=cspPublicKey,proto3" json:"cspPublicKey,omitempty"`
	// Whether a plain or blind signature is expected as a proof
	Blind bool `protobuf:"varint,3,opt,name=blind,proto3" json:"blind,omitempty"`
}

func (x *CensusCsp) Reset() {
	*x = CensusCsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CensusCsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CensusCsp) ProtoMessage() {}

func (x *CensusCsp) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CensusCsp.ProtoReflect.Descriptor instead.
func (*CensusCsp) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{2}
}

func (x *CensusCsp) GetCspUri() string {
	if x != nil {
		return x.CspUri
	}
	return ""
}

func (x *CensusCsp) GetCspPublicKey() []byte {
	if x != nil {
		return x.CspPublicKey
	}
	return nil
}

func (x *CensusCsp) GetBlind() bool {
	if x != nil {
		return x.Blind
	}
	return false
}

type CensusErc20 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenAddress   []byte             `protobuf:"bytes,1,opt,name=tokenAddress,proto3" json:"tokenAddress,omitempty"`
	BalanceMapSlot int32              `protobuf:"varint,2,opt,name=balanceMapSlot,proto3" json:"balanceMapSlot,omitempty"`
	Proof          *StorageProofErc20 `protobuf:"bytes,3,opt,name=proof,proto3,oneof" json:"proof,omitempty"`
	// Ethereum block at which the state root is taken
	SourceEthereumBlock int32 `protobuf:"varint,4,opt,name=sourceEthereumBlock,proto3" json:"sourceEthereumBlock,omitempty"`
}

func (x *CensusErc20) Reset() {
	*x = CensusErc20{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CensusErc20) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CensusErc20) ProtoMessage() {}

func (x *CensusErc20) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CensusErc20.ProtoReflect.Descriptor instead.
func (*CensusErc20) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{3}
}

func (x *CensusErc20) GetTokenAddress() []byte {
	if x != nil {
		return x.TokenAddress
	}
	return nil
}

func (x *CensusErc20) GetBalanceMapSlot() int32 {
	if x != nil {
		return x.BalanceMapSlot
	}
	return 0
}

func (x *CensusErc20) GetProof() *StorageProofErc20 {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *CensusErc20) GetSourceEthereumBlock() int32 {
	if x != nil {
		return x.SourceEthereumBlock
	}
	return 0
}

type CensusErc721 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CensusErc721) Reset() {
	*x = CensusErc721{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CensusErc721) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CensusErc721) ProtoMessage() {}

func (x *CensusErc721) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CensusErc721.ProtoReflect.Descriptor instead.
func (*CensusErc721) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{4}
}

type CensusErc1155 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CensusErc1155) Reset() {
	*x = CensusErc1155{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CensusErc1155) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CensusErc1155) ProtoMessage() {}

func (x *CensusErc1155) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CensusErc1155.ProtoReflect.Descriptor instead.
func (*CensusErc1155) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{5}
}

type CensusErc777 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CensusErc777) Reset() {
	*x = CensusErc777{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CensusErc777) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CensusErc777) ProtoMessage() {}

func (x *CensusErc777) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CensusErc777.ProtoReflect.Descriptor instead.
func (*CensusErc777) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{6}
}

type CensusErcMiniMe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenAddress   []byte              `protobuf:"bytes,1,opt,name=tokenAddress,proto3" json:"tokenAddress,omitempty"`
	BalanceMapSlot int32               `protobuf:"varint,2,opt,name=balanceMapSlot,proto3" json:"balanceMapSlot,omitempty"`
	Proof          *StorageProofMiniMe `protobuf:"bytes,3,opt,name=proof,proto3,oneof" json:"proof,omitempty"`
	// Ethereum block at which the state root is taken
	SourceEthereumBlock int32 `protobuf:"varint,4,opt,name=sourceEthereumBlock,proto3" json:"sourceEthereumBlock,omitempty"`
}

func (x *CensusErcMiniMe) Reset() {
	*x = CensusErcMiniMe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CensusErcMiniMe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CensusErcMiniMe) ProtoMessage() {}

func (x *CensusErcMiniMe) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CensusErcMiniMe.ProtoReflect.Descriptor instead.
func (*CensusErcMiniMe) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{7}
}

func (x *CensusErcMiniMe) GetTokenAddress() []byte {
	if x != nil {
		return x.TokenAddress
	}
	return nil
}

func (x *CensusErcMiniMe) GetBalanceMapSlot() int32 {
	if x != nil {
		return x.BalanceMapSlot
	}
	return 0
}

func (x *CensusErcMiniMe) GetProof() *StorageProofMiniMe {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *CensusErcMiniMe) GetSourceEthereumBlock() int32 {
	if x != nil {
		return x.SourceEthereumBlock
	}
	return 0
}

type Proof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*Proof_None
	//	*Proof_Arbo
	//	*Proof_Csp
	//	*Proof_Erc20
	//	*Proof_Erc721
	//	*Proof_Erc1155
	//	*Proof_Erc777
	//	*Proof_MiniMe
	//	*Proof_ZkSnark
	Body isProof_Body `protobuf_oneof:"body"`
}

func (x *Proof) Reset() {
	*x = Proof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proof) ProtoMessage() {}

func (x *Proof) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proof.ProtoReflect.Descriptor instead.
func (*Proof) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{8}
}

func (m *Proof) GetBody() isProof_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *Proof) GetNone() *ProofNone {
	if x, ok := x.GetBody().(*Proof_None); ok {
		return x.None
	}
	return nil
}

func (x *Proof) GetArbo() *ProofArbo {
	if x, ok := x.GetBody().(*Proof_Arbo); ok {
		return x.Arbo
	}
	return nil
}

func (x *Proof) GetCsp() *ProofCSP {
	if x, ok := x.GetBody().(*Proof_Csp); ok {
		return x.Csp
	}
	return nil
}

func (x *Proof) GetErc20() *StorageProofErc20 {
	if x, ok := x.GetBody().(*Proof_Erc20); ok {
		return x.Erc20
	}
	return nil
}

func (x *Proof) GetErc721() *StorageProofErc721 {
	if x, ok := x.GetBody().(*Proof_Erc721); ok {
		return x.Erc721
	}
	return nil
}

func (x *Proof) GetErc1155() *StorageProofErc1155 {
	if x, ok := x.GetBody().(*Proof_Erc1155); ok {
		return x.Erc1155
	}
	return nil
}

func (x *Proof) GetErc777() *StorageProofErc777 {
	if x, ok := x.GetBody().(*Proof_Erc777); ok {
		return x.Erc777
	}
	return nil
}

func (x *Proof) GetMiniMe() *StorageProofMiniMe {
	if x, ok := x.GetBody().(*Proof_MiniMe); ok {
		return x.MiniMe
	}
	return nil
}

func (x *Proof) GetZkSnark() *ProofZkSnark {
	if x, ok := x.GetBody().(*Proof_ZkSnark); ok {
		return x.ZkSnark
	}
	return nil
}

type isProof_Body interface {
	isProof_Body()
}

type Proof_None struct {
	// SIGNED PROOFS
	None *ProofNone `protobuf:"bytes,1,opt,name=none,proto3,oneof"`
}

type Proof_Arbo struct {
	// Always weighted
	Arbo *ProofArbo `protobuf:"bytes,11,opt,name=arbo,proto3,oneof"`
}

type Proof_Csp struct {
	Csp *ProofCSP `protobuf:"bytes,12,opt,name=csp,proto3,oneof"`
}

type Proof_Erc20 struct {
	Erc20 *StorageProofErc20 `protobuf:"bytes,21,opt,name=erc20,proto3,oneof"`
}

type Proof_Erc721 struct {
	Erc721 *StorageProofErc721 `protobuf:"bytes,22,opt,name=erc721,proto3,oneof"`
}

type Proof_Erc1155 struct {
	Erc1155 *StorageProofErc1155 `protobuf:"bytes,23,opt,name=erc1155,proto3,oneof"`
}

type Proof_Erc777 struct {
	Erc777 *StorageProofErc777 `protobuf:"bytes,24,opt,name=erc777,proto3,oneof"`
}

type Proof_MiniMe struct {
	MiniMe *StorageProofMiniMe `protobuf:"bytes,30,opt,name=miniMe,proto3,oneof"`
}

type Proof_ZkSnark struct {
	// ANONYMOUS PROOFS
	ZkSnark *ProofZkSnark `protobuf:"bytes,100,opt,name=zkSnark,proto3,oneof"`
}

func (*Proof_None) isProof_Body() {}

func (*Proof_Arbo) isProof_Body() {}

func (*Proof_Csp) isProof_Body() {}

func (*Proof_Erc20) isProof_Body() {}

func (*Proof_Erc721) isProof_Body() {}

func (*Proof_Erc1155) isProof_Body() {}

func (*Proof_Erc777) isProof_Body() {}

func (*Proof_MiniMe) isProof_Body() {}

func (*Proof_ZkSnark) isProof_Body() {}

type ProofNone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProofNone) Reset() {
	*x = ProofNone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProofNone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProofNone) ProtoMessage() {}

func (x *ProofNone) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProofNone.ProtoReflect.Descriptor instead.
func (*ProofNone) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{9}
}

type ProofArbo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Siblings [][]byte `protobuf:"bytes,1,rep,name=siblings,proto3" json:"siblings,omitempty"`
}

func (x *ProofArbo) Reset() {
	*x = ProofArbo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProofArbo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProofArbo) ProtoMessage() {}

func (x *ProofArbo) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProofArbo.ProtoReflect.Descriptor instead.
func (*ProofArbo) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{10}
}

func (x *ProofArbo) GetSiblings() [][]byte {
	if x != nil {
		return x.Siblings
	}
	return nil
}

type ProofCSP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload   []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"` // {electionId, address, weight}
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *ProofCSP) Reset() {
	*x = ProofCSP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProofCSP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProofCSP) ProtoMessage() {}

func (x *ProofCSP) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProofCSP.ProtoReflect.Descriptor instead.
func (*ProofCSP) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{11}
}

func (x *ProofCSP) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ProofCSP) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type StorageProofErc20 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Proof [][]byte `protobuf:"bytes,3,rep,name=proof,proto3" json:"proof,omitempty"`
}

func (x *StorageProofErc20) Reset() {
	*x = StorageProofErc20{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageProofErc20) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageProofErc20) ProtoMessage() {}

func (x *StorageProofErc20) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageProofErc20.ProtoReflect.Descriptor instead.
func (*StorageProofErc20) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{12}
}

func (x *StorageProofErc20) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *StorageProofErc20) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *StorageProofErc20) GetProof() [][]byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

type StorageProofErc721 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StorageProofErc721) Reset() {
	*x = StorageProofErc721{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageProofErc721) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageProofErc721) ProtoMessage() {}

func (x *StorageProofErc721) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageProofErc721.ProtoReflect.Descriptor instead.
func (*StorageProofErc721) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{13}
}

type StorageProofErc1155 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StorageProofErc1155) Reset() {
	*x = StorageProofErc1155{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageProofErc1155) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageProofErc1155) ProtoMessage() {}

func (x *StorageProofErc1155) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageProofErc1155.ProtoReflect.Descriptor instead.
func (*StorageProofErc1155) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{14}
}

type StorageProofErc777 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StorageProofErc777) Reset() {
	*x = StorageProofErc777{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageProofErc777) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageProofErc777) ProtoMessage() {}

func (x *StorageProofErc777) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageProofErc777.ProtoReflect.Descriptor instead.
func (*StorageProofErc777) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{15}
}

type StorageProofMiniMe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StorageProofMiniMe) Reset() {
	*x = StorageProofMiniMe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageProofMiniMe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageProofMiniMe) ProtoMessage() {}

func (x *StorageProofMiniMe) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageProofMiniMe.ProtoReflect.Descriptor instead.
func (*StorageProofMiniMe) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{16}
}

// Used in elections where the voter anonimity is set to either `ZK_SNARKS` or `ZK_SNARKS_PREREGISTER`
type ProofZkSnark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*ProofZkSnark_Proof1K
	//	*ProofZkSnark_Proof50K
	//	*ProofZkSnark_Proof250K
	Body isProofZkSnark_Body `protobuf_oneof:"body"`
}

func (x *ProofZkSnark) Reset() {
	*x = ProofZkSnark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProofZkSnark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProofZkSnark) ProtoMessage() {}

func (x *ProofZkSnark) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProofZkSnark.ProtoReflect.Descriptor instead.
func (*ProofZkSnark) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{17}
}

func (m *ProofZkSnark) GetBody() isProofZkSnark_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *ProofZkSnark) GetProof1K() *ProofZkSnark_Poseidon1KCensus {
	if x, ok := x.GetBody().(*ProofZkSnark_Proof1K); ok {
		return x.Proof1K
	}
	return nil
}

func (x *ProofZkSnark) GetProof50K() *ProofZkSnark_Poseidon50KCensus {
	if x, ok := x.GetBody().(*ProofZkSnark_Proof50K); ok {
		return x.Proof50K
	}
	return nil
}

func (x *ProofZkSnark) GetProof250K() *ProofZkSnark_Poseidon250KCensus {
	if x, ok := x.GetBody().(*ProofZkSnark_Proof250K); ok {
		return x.Proof250K
	}
	return nil
}

type isProofZkSnark_Body interface {
	isProofZkSnark_Body()
}

type ProofZkSnark_Proof1K struct {
	Proof1K *ProofZkSnark_Poseidon1KCensus `protobuf:"bytes,1,opt,name=proof1k,proto3,oneof"`
}

type ProofZkSnark_Proof50K struct {
	Proof50K *ProofZkSnark_Poseidon50KCensus `protobuf:"bytes,2,opt,name=proof50k,proto3,oneof"`
}

type ProofZkSnark_Proof250K struct {
	Proof250K *ProofZkSnark_Poseidon250KCensus `protobuf:"bytes,3,opt,name=proof250k,proto3,oneof"` // ...
}

func (*ProofZkSnark_Proof1K) isProofZkSnark_Body() {}

func (*ProofZkSnark_Proof50K) isProofZkSnark_Body() {}

func (*ProofZkSnark_Proof250K) isProofZkSnark_Body() {}

type ProofZkSnark_Poseidon1KCensus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProofZkSnark_Poseidon1KCensus) Reset() {
	*x = ProofZkSnark_Poseidon1KCensus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProofZkSnark_Poseidon1KCensus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProofZkSnark_Poseidon1KCensus) ProtoMessage() {}

func (x *ProofZkSnark_Poseidon1KCensus) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProofZkSnark_Poseidon1KCensus.ProtoReflect.Descriptor instead.
func (*ProofZkSnark_Poseidon1KCensus) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{17, 0}
}

type ProofZkSnark_Poseidon50KCensus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProofZkSnark_Poseidon50KCensus) Reset() {
	*x = ProofZkSnark_Poseidon50KCensus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProofZkSnark_Poseidon50KCensus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProofZkSnark_Poseidon50KCensus) ProtoMessage() {}

func (x *ProofZkSnark_Poseidon50KCensus) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProofZkSnark_Poseidon50KCensus.ProtoReflect.Descriptor instead.
func (*ProofZkSnark_Poseidon50KCensus) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{17, 1}
}

type ProofZkSnark_Poseidon250KCensus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProofZkSnark_Poseidon250KCensus) Reset() {
	*x = ProofZkSnark_Poseidon250KCensus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_census_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProofZkSnark_Poseidon250KCensus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProofZkSnark_Poseidon250KCensus) ProtoMessage() {}

func (x *ProofZkSnark_Poseidon250KCensus) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_census_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProofZkSnark_Poseidon250KCensus.ProtoReflect.Descriptor instead.
func (*ProofZkSnark_Poseidon250KCensus) Descriptor() ([]byte, []int) {
	return file_protocol_census_proto_rawDescGZIP(), []int{17, 2}
}

var File_protocol_census_proto protoreflect.FileDescriptor

var file_protocol_census_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x64, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x22, 0x92, 0x03, 0x0a, 0x06, 0x43, 0x65, 0x6e, 0x73,
	0x75, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x61, 0x72, 0x62, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x64, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x41, 0x72, 0x62, 0x6f, 0x48, 0x00, 0x52, 0x04,
	0x61, 0x72, 0x62, 0x6f, 0x12, 0x2d, 0x0a, 0x03, 0x63, 0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x64, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x43, 0x73, 0x70, 0x48, 0x00, 0x52, 0x03,
	0x63, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x05, 0x65, 0x72, 0x63, 0x32, 0x30, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x45, 0x72, 0x63, 0x32, 0x30, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x63, 0x32, 0x30, 0x12, 0x36, 0x0a, 0x06, 0x65, 0x72, 0x63, 0x37,
	0x32, 0x31, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x76, 0x6f, 0x74, 0x65,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x65, 0x6e, 0x73, 0x75, 0x73,
	0x45, 0x72, 0x63, 0x37, 0x32, 0x31, 0x48, 0x00, 0x52, 0x06, 0x65, 0x72, 0x63, 0x37, 0x32, 0x31,
	0x12, 0x39, 0x0a, 0x07, 0x65, 0x72, 0x63, 0x31, 0x31, 0x35, 0x35, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x45, 0x72, 0x63, 0x31, 0x31, 0x35, 0x35,
	0x48, 0x00, 0x52, 0x07, 0x65, 0x72, 0x63, 0x31, 0x31, 0x35, 0x35, 0x12, 0x36, 0x0a, 0x06, 0x65,
	0x72, 0x63, 0x37, 0x37, 0x37, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x76,
	0x6f, 0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x65, 0x6e,
	0x73, 0x75, 0x73, 0x45, 0x72, 0x63, 0x37, 0x32, 0x31, 0x48, 0x00, 0x52, 0x06, 0x65, 0x72, 0x63,
	0x37, 0x37, 0x37, 0x12, 0x3f, 0x0a, 0x09, 0x65, 0x72, 0x63, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x45, 0x72,
	0x63, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x65, 0x48, 0x00, 0x52, 0x09, 0x65, 0x72, 0x63, 0x4d, 0x69,
	0x6e, 0x69, 0x4d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x4a, 0x0a, 0x0a,
	0x43, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x41, 0x72, 0x62, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65,
	0x6e, 0x73, 0x75, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x63, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x65,
	0x6e, 0x73, 0x75, 0x73, 0x55, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x65, 0x6e, 0x73, 0x75, 0x73, 0x55, 0x72, 0x69, 0x22, 0x5d, 0x0a, 0x09, 0x43, 0x65, 0x6e, 0x73,
	0x75, 0x73, 0x43, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x73, 0x70, 0x55, 0x72, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x73, 0x70, 0x55, 0x72, 0x69, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x73, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x73, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x22, 0xd3, 0x01, 0x0a, 0x0b, 0x43, 0x65, 0x6e, 0x73,
	0x75, 0x73, 0x45, 0x72, 0x63, 0x32, 0x30, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x53,
	0x6c, 0x6f, 0x74, 0x12, 0x3c, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x45, 0x72, 0x63, 0x32, 0x30, 0x48, 0x00, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x88, 0x01,
	0x01, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x0e, 0x0a,
	0x0c, 0x43, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x45, 0x72, 0x63, 0x37, 0x32, 0x31, 0x22, 0x0f, 0x0a,
	0x0d, 0x43, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x45, 0x72, 0x63, 0x31, 0x31, 0x35, 0x35, 0x22, 0x0e,
	0x0a, 0x0c, 0x43, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x45, 0x72, 0x63, 0x37, 0x37, 0x37, 0x22, 0xd8,
	0x01, 0x0a, 0x0f, 0x43, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x45, 0x72, 0x63, 0x4d, 0x69, 0x6e, 0x69,
	0x4d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x4d, 0x61, 0x70, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x3d,
	0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x64, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x69, 0x6e, 0x69, 0x4d,
	0x65, 0x48, 0x00, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a,
	0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x8f, 0x04, 0x0a, 0x05, 0x50, 0x72,
	0x6f, 0x6f, 0x66, 0x12, 0x2f, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x64, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4e, 0x6f, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x04,
	0x6e, 0x6f, 0x6e, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x61, 0x72, 0x62, 0x6f, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x41, 0x72, 0x62, 0x6f, 0x48, 0x00, 0x52,
	0x04, 0x61, 0x72, 0x62, 0x6f, 0x12, 0x2c, 0x0a, 0x03, 0x63, 0x73, 0x70, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x43, 0x53, 0x50, 0x48, 0x00, 0x52, 0x03,
	0x63, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x63, 0x32, 0x30, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x45, 0x72, 0x63, 0x32, 0x30, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x63, 0x32, 0x30, 0x12, 0x3c,
	0x0a, 0x06, 0x65, 0x72, 0x63, 0x37, 0x32, 0x31, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x64, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x45, 0x72, 0x63, 0x37,
	0x32, 0x31, 0x48, 0x00, 0x52, 0x06, 0x65, 0x72, 0x63, 0x37, 0x32, 0x31, 0x12, 0x3f, 0x0a, 0x07,
	0x65, 0x72, 0x63, 0x31, 0x31, 0x35, 0x35, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x64, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x45, 0x72, 0x63, 0x31, 0x31,
	0x35, 0x35, 0x48, 0x00, 0x52, 0x07, 0x65, 0x72, 0x63, 0x31, 0x31, 0x35, 0x35, 0x12, 0x3c, 0x0a,
	0x06, 0x65, 0x72, 0x63, 0x37, 0x37, 0x37, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x64, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x45, 0x72, 0x63, 0x37, 0x37,
	0x37, 0x48, 0x00, 0x52, 0x06, 0x65, 0x72, 0x63, 0x37, 0x37, 0x37, 0x12, 0x3c, 0x0a, 0x06, 0x6d,
	0x69, 0x6e, 0x69, 0x4d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x76,
	0x6f, 0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x65, 0x48,
	0x00, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x69, 0x4d, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x7a, 0x6b, 0x53,
	0x6e, 0x61, 0x72, 0x6b, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x76, 0x6f,
	0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x5a, 0x6b, 0x53, 0x6e, 0x61, 0x72, 0x6b, 0x48, 0x00, 0x52, 0x07, 0x7a, 0x6b, 0x53, 0x6e,
	0x61, 0x72, 0x6b, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x0b, 0x0a, 0x09, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x27, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x41, 0x72, 0x62, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67,
	0x73, 0x22, 0x42, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x43, 0x53, 0x50, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x51, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x45, 0x72, 0x63, 0x32, 0x30, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x45, 0x72, 0x63, 0x37, 0x32, 0x31, 0x22, 0x15,
	0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x45, 0x72,
	0x63, 0x31, 0x31, 0x35, 0x35, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x45, 0x72, 0x63, 0x37, 0x37, 0x37, 0x22, 0x14, 0x0a, 0x12, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x69, 0x6e, 0x69, 0x4d,
	0x65, 0x22, 0xbf, 0x02, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x5a, 0x6b, 0x53, 0x6e, 0x61,
	0x72, 0x6b, 0x12, 0x49, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x31, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x64, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x5a, 0x6b, 0x53, 0x6e, 0x61, 0x72,
	0x6b, 0x2e, 0x50, 0x6f, 0x73, 0x65, 0x69, 0x64, 0x6f, 0x6e, 0x31, 0x6b, 0x43, 0x65, 0x6e, 0x73,
	0x75, 0x73, 0x48, 0x00, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x31, 0x6b, 0x12, 0x4c, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x35, 0x30, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x64, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x32,
	0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x5a, 0x6b, 0x53, 0x6e, 0x61, 0x72, 0x6b, 0x2e, 0x50, 0x6f,
	0x73, 0x65, 0x69, 0x64, 0x6f, 0x6e, 0x35, 0x30, 0x6b, 0x43, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x48,
	0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x35, 0x30, 0x6b, 0x12, 0x4f, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x32, 0x35, 0x30, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x64, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x5a, 0x6b, 0x53, 0x6e, 0x61, 0x72, 0x6b, 0x2e, 0x50, 0x6f, 0x73,
	0x65, 0x69, 0x64, 0x6f, 0x6e, 0x32, 0x35, 0x30, 0x6b, 0x43, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x48,
	0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x32, 0x35, 0x30, 0x6b, 0x1a, 0x12, 0x0a, 0x10,
	0x50, 0x6f, 0x73, 0x65, 0x69, 0x64, 0x6f, 0x6e, 0x31, 0x6b, 0x43, 0x65, 0x6e, 0x73, 0x75, 0x73,
	0x1a, 0x13, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x65, 0x69, 0x64, 0x6f, 0x6e, 0x35, 0x30, 0x6b, 0x43,
	0x65, 0x6e, 0x73, 0x75, 0x73, 0x1a, 0x14, 0x0a, 0x12, 0x50, 0x6f, 0x73, 0x65, 0x69, 0x64, 0x6f,
	0x6e, 0x32, 0x35, 0x30, 0x6b, 0x43, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x6f, 0x2e, 0x76, 0x6f, 0x63, 0x64, 0x6f, 0x6e,
	0x69, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x2f, 0x67, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x32, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protocol_census_proto_rawDescOnce sync.Once
	file_protocol_census_proto_rawDescData = file_protocol_census_proto_rawDesc
)

func file_protocol_census_proto_rawDescGZIP() []byte {
	file_protocol_census_proto_rawDescOnce.Do(func() {
		file_protocol_census_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocol_census_proto_rawDescData)
	})
	return file_protocol_census_proto_rawDescData
}

var file_protocol_census_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_protocol_census_proto_goTypes = []interface{}{
	(*Census)(nil),                          // 0: dvote.types.v2.Census
	(*CensusArbo)(nil),                      // 1: dvote.types.v2.CensusArbo
	(*CensusCsp)(nil),                       // 2: dvote.types.v2.CensusCsp
	(*CensusErc20)(nil),                     // 3: dvote.types.v2.CensusErc20
	(*CensusErc721)(nil),                    // 4: dvote.types.v2.CensusErc721
	(*CensusErc1155)(nil),                   // 5: dvote.types.v2.CensusErc1155
	(*CensusErc777)(nil),                    // 6: dvote.types.v2.CensusErc777
	(*CensusErcMiniMe)(nil),                 // 7: dvote.types.v2.CensusErcMiniMe
	(*Proof)(nil),                           // 8: dvote.types.v2.Proof
	(*ProofNone)(nil),                       // 9: dvote.types.v2.ProofNone
	(*ProofArbo)(nil),                       // 10: dvote.types.v2.ProofArbo
	(*ProofCSP)(nil),                        // 11: dvote.types.v2.ProofCSP
	(*StorageProofErc20)(nil),               // 12: dvote.types.v2.StorageProofErc20
	(*StorageProofErc721)(nil),              // 13: dvote.types.v2.StorageProofErc721
	(*StorageProofErc1155)(nil),             // 14: dvote.types.v2.StorageProofErc1155
	(*StorageProofErc777)(nil),              // 15: dvote.types.v2.StorageProofErc777
	(*StorageProofMiniMe)(nil),              // 16: dvote.types.v2.StorageProofMiniMe
	(*ProofZkSnark)(nil),                    // 17: dvote.types.v2.ProofZkSnark
	(*ProofZkSnark_Poseidon1KCensus)(nil),   // 18: dvote.types.v2.ProofZkSnark.Poseidon1kCensus
	(*ProofZkSnark_Poseidon50KCensus)(nil),  // 19: dvote.types.v2.ProofZkSnark.Poseidon50kCensus
	(*ProofZkSnark_Poseidon250KCensus)(nil), // 20: dvote.types.v2.ProofZkSnark.Poseidon250kCensus
}
var file_protocol_census_proto_depIdxs = []int32{
	1,  // 0: dvote.types.v2.Census.arbo:type_name -> dvote.types.v2.CensusArbo
	2,  // 1: dvote.types.v2.Census.csp:type_name -> dvote.types.v2.CensusCsp
	3,  // 2: dvote.types.v2.Census.erc20:type_name -> dvote.types.v2.CensusErc20
	4,  // 3: dvote.types.v2.Census.erc721:type_name -> dvote.types.v2.CensusErc721
	5,  // 4: dvote.types.v2.Census.erc1155:type_name -> dvote.types.v2.CensusErc1155
	4,  // 5: dvote.types.v2.Census.erc777:type_name -> dvote.types.v2.CensusErc721
	7,  // 6: dvote.types.v2.Census.ercMiniMe:type_name -> dvote.types.v2.CensusErcMiniMe
	12, // 7: dvote.types.v2.CensusErc20.proof:type_name -> dvote.types.v2.StorageProofErc20
	16, // 8: dvote.types.v2.CensusErcMiniMe.proof:type_name -> dvote.types.v2.StorageProofMiniMe
	9,  // 9: dvote.types.v2.Proof.none:type_name -> dvote.types.v2.ProofNone
	10, // 10: dvote.types.v2.Proof.arbo:type_name -> dvote.types.v2.ProofArbo
	11, // 11: dvote.types.v2.Proof.csp:type_name -> dvote.types.v2.ProofCSP
	12, // 12: dvote.types.v2.Proof.erc20:type_name -> dvote.types.v2.StorageProofErc20
	13, // 13: dvote.types.v2.Proof.erc721:type_name -> dvote.types.v2.StorageProofErc721
	14, // 14: dvote.types.v2.Proof.erc1155:type_name -> dvote.types.v2.StorageProofErc1155
	15, // 15: dvote.types.v2.Proof.erc777:type_name -> dvote.types.v2.StorageProofErc777
	16, // 16: dvote.types.v2.Proof.miniMe:type_name -> dvote.types.v2.StorageProofMiniMe
	17, // 17: dvote.types.v2.Proof.zkSnark:type_name -> dvote.types.v2.ProofZkSnark
	18, // 18: dvote.types.v2.ProofZkSnark.proof1k:type_name -> dvote.types.v2.ProofZkSnark.Poseidon1kCensus
	19, // 19: dvote.types.v2.ProofZkSnark.proof50k:type_name -> dvote.types.v2.ProofZkSnark.Poseidon50kCensus
	20, // 20: dvote.types.v2.ProofZkSnark.proof250k:type_name -> dvote.types.v2.ProofZkSnark.Poseidon250kCensus
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_protocol_census_proto_init() }
func file_protocol_census_proto_init() {
	if File_protocol_census_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocol_census_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Census); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CensusArbo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CensusCsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CensusErc20); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CensusErc721); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CensusErc1155); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CensusErc777); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CensusErcMiniMe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProofNone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProofArbo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProofCSP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageProofErc20); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageProofErc721); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageProofErc1155); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageProofErc777); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageProofMiniMe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProofZkSnark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProofZkSnark_Poseidon1KCensus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProofZkSnark_Poseidon50KCensus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_census_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProofZkSnark_Poseidon250KCensus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protocol_census_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Census_Arbo)(nil),
		(*Census_Csp)(nil),
		(*Census_Erc20)(nil),
		(*Census_Erc721)(nil),
		(*Census_Erc1155)(nil),
		(*Census_Erc777)(nil),
		(*Census_ErcMiniMe)(nil),
	}
	file_protocol_census_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_protocol_census_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_protocol_census_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*Proof_None)(nil),
		(*Proof_Arbo)(nil),
		(*Proof_Csp)(nil),
		(*Proof_Erc20)(nil),
		(*Proof_Erc721)(nil),
		(*Proof_Erc1155)(nil),
		(*Proof_Erc777)(nil),
		(*Proof_MiniMe)(nil),
		(*Proof_ZkSnark)(nil),
	}
	file_protocol_census_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*ProofZkSnark_Proof1K)(nil),
		(*ProofZkSnark_Proof50K)(nil),
		(*ProofZkSnark_Proof250K)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocol_census_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protocol_census_proto_goTypes,
		DependencyIndexes: file_protocol_census_proto_depIdxs,
		MessageInfos:      file_protocol_census_proto_msgTypes,
	}.Build()
	File_protocol_census_proto = out.File
	file_protocol_census_proto_rawDesc = nil
	file_protocol_census_proto_goTypes = nil
	file_protocol_census_proto_depIdxs = nil
}
