// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.24.3
// source: vocdoni-node/statedb.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Process as it is stored in the Arbo-based StateDB
type StateDBProcess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// vochain Process
	Process *Process `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
	// root of the StateDB SubTree that contains the proces' votes
	VotesRoot []byte `protobuf:"bytes,2,opt,name=votesRoot,proto3" json:"votesRoot,omitempty"`
}

func (x *StateDBProcess) Reset() {
	*x = StateDBProcess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vocdoni_node_statedb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateDBProcess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateDBProcess) ProtoMessage() {}

func (x *StateDBProcess) ProtoReflect() protoreflect.Message {
	mi := &file_vocdoni_node_statedb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateDBProcess.ProtoReflect.Descriptor instead.
func (*StateDBProcess) Descriptor() ([]byte, []int) {
	return file_vocdoni_node_statedb_proto_rawDescGZIP(), []int{0}
}

func (x *StateDBProcess) GetProcess() *Process {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *StateDBProcess) GetVotesRoot() []byte {
	if x != nil {
		return x.VotesRoot
	}
	return nil
}

// Vote as it is stored in the Arbo-based StateDB
type StateDBVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// hash of the protobuf-marshalled Vote
	VoteHash []byte `protobuf:"bytes,1,opt,name=voteHash,proto3" json:"voteHash,omitempty"`
	// nullifier identifies the vote
	Nullifier []byte `protobuf:"bytes,3,opt,name=nullifier,proto3" json:"nullifier,omitempty"`
	// votePackage contains the choices for the vote
	VotePackage []byte `protobuf:"bytes,4,opt,name=votePackage,proto3" json:"votePackage,omitempty"`
	// weight of the vote
	Weight []byte `protobuf:"bytes,5,opt,name=Weight,proto3" json:"Weight,omitempty"`
	// overwriteCount stores the number of times this vote has been overwritten
	OverwriteCount *uint32 `protobuf:"varint,6,opt,name=overwriteCount,proto3,oneof" json:"overwriteCount,omitempty"`
	// encryptionKeyIndexes stores the indexes of the encryption keys used to encrypt the vote
	EncryptionKeyIndexes []uint32 `protobuf:"varint,7,rep,packed,name=encryptionKeyIndexes,proto3" json:"encryptionKeyIndexes,omitempty"`
}

func (x *StateDBVote) Reset() {
	*x = StateDBVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vocdoni_node_statedb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateDBVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateDBVote) ProtoMessage() {}

func (x *StateDBVote) ProtoReflect() protoreflect.Message {
	mi := &file_vocdoni_node_statedb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateDBVote.ProtoReflect.Descriptor instead.
func (*StateDBVote) Descriptor() ([]byte, []int) {
	return file_vocdoni_node_statedb_proto_rawDescGZIP(), []int{1}
}

func (x *StateDBVote) GetVoteHash() []byte {
	if x != nil {
		return x.VoteHash
	}
	return nil
}

func (x *StateDBVote) GetNullifier() []byte {
	if x != nil {
		return x.Nullifier
	}
	return nil
}

func (x *StateDBVote) GetVotePackage() []byte {
	if x != nil {
		return x.VotePackage
	}
	return nil
}

func (x *StateDBVote) GetWeight() []byte {
	if x != nil {
		return x.Weight
	}
	return nil
}

func (x *StateDBVote) GetOverwriteCount() uint32 {
	if x != nil && x.OverwriteCount != nil {
		return *x.OverwriteCount
	}
	return 0
}

func (x *StateDBVote) GetEncryptionKeyIndexes() []uint32 {
	if x != nil {
		return x.EncryptionKeyIndexes
	}
	return nil
}

type ProcessIdList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessIds [][]byte `protobuf:"bytes,1,rep,name=processIds,proto3" json:"processIds,omitempty"`
}

func (x *ProcessIdList) Reset() {
	*x = ProcessIdList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vocdoni_node_statedb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessIdList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessIdList) ProtoMessage() {}

func (x *ProcessIdList) ProtoReflect() protoreflect.Message {
	mi := &file_vocdoni_node_statedb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessIdList.ProtoReflect.Descriptor instead.
func (*ProcessIdList) Descriptor() ([]byte, []int) {
	return file_vocdoni_node_statedb_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessIdList) GetProcessIds() [][]byte {
	if x != nil {
		return x.ProcessIds
	}
	return nil
}

var File_vocdoni_node_statedb_proto protoreflect.FileDescriptor

var file_vocdoni_node_statedb_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x76, 0x6f, 0x63, 0x64, 0x6f, 0x6e, 0x69, 0x2d, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x64, 0x76,
	0x6f, 0x74, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x76, 0x6f,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x6f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x61, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x42, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x6f, 0x74, 0x65,
	0x73, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x76, 0x6f, 0x74,
	0x65, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x22, 0xf5, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x44, 0x42, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x75, 0x6c, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6e, 0x75, 0x6c, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2b, 0x0a, 0x0e, 0x6f, 0x76,
	0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x14, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x14, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2f,
	0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x73, 0x42,
	0x25, 0x5a, 0x23, 0x67, 0x6f, 0x2e, 0x76, 0x6f, 0x63, 0x64, 0x6f, 0x6e, 0x69, 0x2e, 0x69, 0x6f,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x67, 0x6f, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vocdoni_node_statedb_proto_rawDescOnce sync.Once
	file_vocdoni_node_statedb_proto_rawDescData = file_vocdoni_node_statedb_proto_rawDesc
)

func file_vocdoni_node_statedb_proto_rawDescGZIP() []byte {
	file_vocdoni_node_statedb_proto_rawDescOnce.Do(func() {
		file_vocdoni_node_statedb_proto_rawDescData = protoimpl.X.CompressGZIP(file_vocdoni_node_statedb_proto_rawDescData)
	})
	return file_vocdoni_node_statedb_proto_rawDescData
}

var file_vocdoni_node_statedb_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_vocdoni_node_statedb_proto_goTypes = []interface{}{
	(*StateDBProcess)(nil), // 0: dvote.types.v1.StateDBProcess
	(*StateDBVote)(nil),    // 1: dvote.types.v1.StateDBVote
	(*ProcessIdList)(nil),  // 2: dvote.types.v1.ProcessIdList
	(*Process)(nil),        // 3: dvote.types.v1.Process
}
var file_vocdoni_node_statedb_proto_depIdxs = []int32{
	3, // 0: dvote.types.v1.StateDBProcess.process:type_name -> dvote.types.v1.Process
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_vocdoni_node_statedb_proto_init() }
func file_vocdoni_node_statedb_proto_init() {
	if File_vocdoni_node_statedb_proto != nil {
		return
	}
	file_vochain_vochain_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_vocdoni_node_statedb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateDBProcess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vocdoni_node_statedb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateDBVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vocdoni_node_statedb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessIdList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_vocdoni_node_statedb_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vocdoni_node_statedb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vocdoni_node_statedb_proto_goTypes,
		DependencyIndexes: file_vocdoni_node_statedb_proto_depIdxs,
		MessageInfos:      file_vocdoni_node_statedb_proto_msgTypes,
	}.Build()
	File_vocdoni_node_statedb_proto = out.File
	file_vocdoni_node_statedb_proto_rawDesc = nil
	file_vocdoni_node_statedb_proto_goTypes = nil
	file_vocdoni_node_statedb_proto_depIdxs = nil
}
